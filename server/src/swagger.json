{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server HRMS Homework.",
    "version": "1.0.0",
    "title": "Server demo"
  },
  "host": "",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "auth",
      "description": "login logout"
    },
    {
      "name": "document",
      "description": "Operations about document"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "confirm",
      "description": "Operations about confirm"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/auth/admin": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login with username and password",
        "description": "/api/vi/auth/admin",
        "operationId": "addPet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "add username and password",
            "required": true,
            "schema": {
              "type":"object",
              "properties": {
                "username":{
                  "type":"string"
                },
                "password":{
                  "type":"string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type":"object",
              "properties": {
                "msg":{
                  "type":"string"
                },
                "name":{
                  "type":"string"
                },
                "token":{
                  "type":"string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "type":"object",
              "properties": {
                "msg":{
                  "type":"string",
                  "value":"not"
                }
              }
            }
          }
        }
      }
    },
    "/auth/loginGoogle": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login by tokenId",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findPetsByStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "schema": {
              "type":"object",
              "properties": {
                "tokenId":{
                  "type":"string"
                }
              }
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type":"object",
              "properties": {
                "msg":{
                  "type":"string"
                },
                "token":{
                  "type":"string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "type":"object",
              "properties": {
                "msg":{
                  "type":"string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "logout",
        "description": "api/v1/auth/logout",
        "operationId": "Logout",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Tags to filter by",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "msg":{
                  "type":"string"
                }
              }
            }
          },
          "401": {
            "schema": {
              "type":"string"
            }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "msg":{
                  "type":"string"
                }
              }
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/document?perPage=5&page=1": {
      "get": {
        "tags": [
          "document"
        ],
        "summary": "Returns all document by userId",
        "description": "Returns a map of document",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "query":[],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "documents": {
                  "type": "array",
                  "items":{
                    "type":"object",
                    "properties": {
                      "docId": {
                        "type": "object"
                      },
                      "status": {
                        "type": "string"
                      }
                    }
                  }
                },
                "current": {
                  "type": "integer"
                },
                "status": {
                  "type": "integer"
                }
              }
            }
          }, 
          "400": {
            "description": "somethings went wrong"
          }
        },
        "security": [
          {
            "bearer Token": []
          }
        ]
      }
    },
    "/document": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Create new document",
        "description": "",
        "operationId": "placeOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "order placed for purchasing the pet",
            "required": true,
            "schema": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type":"string"
                },
                "docId":{
                  "type":"string"
                }
              }
            }
          },
          "400": {
            "description": "Can't create document, please try later"
          }
        },
        "security": [
          {
            "bearer Token": []
          }
        ]
      }
    },
    "/document/:docId": {
      "get": {
        "tags": [
          "document"
        ],
        "summary": "Get info document by ID",
        "description": "",
        "operationId": "getOrderById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of pet that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        },
        "security": [
          {
            "bearer Token": []
          }
        ]
      },
      "put": {
        "tags": [
          "document"
        ],
        "summary": "Update document by ID",
        "description": "",
        "operationId": "getOrderById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of pet that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        },
        "security": [
          {
            "bearer Token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "document"
        ],
        "summary": "Delete purchase order by ID",
        "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
        "operationId": "deleteOrder",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        },
        "security": [
          {
            "bearer Token": []
          }
        ]
      }
    },
    "/user/info": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get info user by token",
        "description": "/api/v1/user/info",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username"
          }
        }
      }
    },
    "/user/all": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get all user",
        "description": "api/v1/user/all",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid users"
          }
        }
      }
    },
    "/user/:docId?perPage=5&page=1&active=true/false": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all user by request and docId",
        "description": "api/v1/user/:docId?perPage=5&page=1&active=true/false",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "docId":{
                  "type": "string"
                },
                "users":{
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId":{
                        "$ref": "#/definitions/User"
                      },
                      "status":{
                        "type": "string"
                      }
                    }
                  }
                },
                "current":{
                  "type": "integer"
                },
                "pages":{
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "can't exec data"
          }
        }
      }
    },
    "/confirm": {
      "put": {
        "tags": [
          "confirm"
        ],
        "summary": "Update status confirm",
        "description": "",
        "operationId": "createUsersWithArrayInput",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/confirm/:id": {
      "get": {
        "tags": [
          "confirm"
        ],
        "summary": "Get all confirm by docId",
        "description": "",
        "operationId": "createUsersWithArrayInput",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Document": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "ObjectId",
          "format": "uuid"
        },
        "postedBy": {
          "type": "ObjectId",
          "format": "uuid",
          "ref": "User"
        },
        "title": {
          "type": "string",
          "format": "string"
        },
        "category": {
          "type": "string",
          "format": "string"
        },
        "description": {
          "type": "string",
          "format": "string"
        },
        "url": {
          "type": "string",
          "format": "string"
        },
        "deleted": {
          "type": "Boolean",
          "format": "Boolean",
          "default": false
        },
        "createAt": {
          "type": "DateTime",
          "format": "DateTime"
        },
        "updateAt": {
          "type": "DateTime",
          "format": "DateTime"
        },
        "deleteAt": {
          "type": "DateTime",
          "format": "DateTime"
        }
      },
      "xml": {
        "name": "Document"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "ObjectId",
          "format": "uuid"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }, 
        "socialId": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "role": {
          "type": "Number",
          "description": "0:user; 9: admin"
        },
        "deleted": {
          "type": "Boolean",
          "format": "Boolean",
          "default": false
        },
        "createAt": {
          "type": "DateTime",
          "format": "DateTime"
        },
        "updateAt": {
          "type": "DateTime",
          "format": "DateTime"
        },
        "deleteAt": {
          "type": "DateTime",
          "format": "DateTime"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Confirm": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "ObjectId"
        },
        "userId": {
          "type": "ObjectId",
          "ref": "User"
        },
        "docId": {
          "type": "ObjectId",
          "ref": "Document"
        },
        "active":{
          "type": "boolean",
          "default": false
        },
        "status": {
          "type": "string",
          "description": "Open, Reading, Complete"
        },
        "deleted": {
          "type": "Boolean",
          "format": "Boolean",
          "default": false
        },
        "createAt": {
          "type": "DateTime",
          "format": "DateTime"
        },
        "updateAt": {
          "type": "DateTime",
          "format": "DateTime"
        },
        "deleteAt": {
          "type": "DateTime",
          "format": "DateTime"
        }
      },
      "xml": {
        "name": "Confirm"
      }
    }
  }
}